AWSTemplateFormatVersion: '2010-09-09'
Description: 'Main CloudFormation template for Workforce Identity Visualization - orchestrates nested stacks'

Parameters:
  S3SourceBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the SSM parameter containing the S3 bucket with all Lambda function source code
    Default: 'aria-source-bucket'

  S3ExportBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the SSM parameter containing the S3 bucket to export all data to
    Default: 'aria-export-bucket'
    
  CreateTablesS3Key:
    Type: String
    Description: S3 key (path) to the CreateTables Lambda function code zip file
    Default: 'createtables.zip'
  
  ListUsersS3Key:
    Type: String
    Description: S3 key (path) to the ListUsers Lambda function code zip file
    Default: 'listusers.zip'

  ListGroupsS3Key:
    Type: String
    Description: S3 key (path) to the ListGroups Lambda function code zip file
    Default: 'listgroups.zip'

  ListGroupMembershipS3Key:
    Type: String
    Description: S3 key (path) to the ListGroupMembership Lambda function code zip file
    Default: 'listgroupmembership.zip'

  ListPermissionSetsS3Key:
    Type: String
    Description: S3 key (path) to the ListPermissionSets Lambda function code zip file
    Default: 'listpermissionsets.zip'

  ListProvisionedPermissionSetsS3Key:
    Type: String
    Description: S3 key (path) to the ListProvisionedPermissionSets Lambda function code zip file
    Default: 'listprovisionedpermissionsets.zip'

  ListAccountsS3Key:
    Type: String
    Description: S3 key (path) to the ListAccounts Lambda function code zip file
    Default: 'listaccounts.zip'

  ListUserAccountAssignmentsS3Key:
    Type: String
    Description: S3 key (path) to the ListUserAccountAssignments Lambda function code zip file
    Default: 'listuseraccountassignments.zip'

  ListGroupAccountAssignmentsS3Key:
    Type: String
    Description: S3 key (path) to the ListGroupAccountAssignments Lambda function code zip file
    Default: 'listgroupaccountassignments.zip'

  GetIAMRolesS3Key:
    Type: String
    Description: S3 key (path) to the GetIAMRoles Lambda function code zip file
    Default: 'getiamroles.zip'
  
  S3ExportS3Key:
    Type: String
    Description: S3 key (path) to the S3Export Lambda function code zip file
    Default: 's3export.zip'
  
  AccessAnalyzerFindingIngestionS3Key:
    Type: String
    Description: S3 key (path) to the AccessAnalyzerFindingIngestion Lambda function code zip file
    Default: 'accessanalyzerfindingingestion.zip'

  UpdateFunctionCodeS3Key:
    Type: String
    Description: S3 key (path) to the UpdateFunctionCode Lambda function code zip file
    Default: 'updatefunctioncode.zip'

  PythonHandler:
    Type: String
    Description: The Python handler function
    Default: lambda_function.lambda_handler

  TemplatesBucketName:
    Type: String
    Description: S3 bucket containing nested CloudFormation templates
    Default: 'aria-templates-bucket'

  # Neptune Analytics Parameters
  GraphName:
    Type: String
    Description: 'Name of the Neptune graph'
    Default: 'aria-identitycenter'

  PublicIPAddress:
    Type: String
    Description: Provide your public IP address in CIDR format e.g. 1.2.3.4/32
    Default: '0.0.0.0/0'

  # Neptune Notebook Parameters
  NotebookInstanceType:
    Type: String
    Description: SageMaker Notebook instance type
    Default: ml.t2.large
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.t3.medium
      - ml.t3.large
      - ml.t3.xlarge
      - ml.t3.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge

  NotebookName:
    Type: String
    Description: Name for the notebook instance
    Default: 'Aria-Jupyter-Notebook'
    MaxLength: 38

  DeployNeptune:
    Type: String
    Description: Whether to deploy Neptune Analytics and Notebook
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'

  # Scheduling Parameters
  EnableScheduling:
    Type: String
    Description: Enable automatic scheduling of the AriaExportGraphStateMachine
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

  ScheduleExpression:
    Type: String
    Description: 'Schedule expression for automatic execution (e.g., rate(1 day), cron(0 2 * * ? *))'
    Default: 'rate(1 day)'

  ScheduleDescription:
    Type: String
    Description: 'Description for the scheduled execution'
    Default: 'Daily execution of ARIA graph export and import'

  ScheduleTimezone:
    Type: String
    Description: 'Timezone for cron-based schedules (e.g., America/New_York, UTC)'
    Default: 'UTC'

  # Data Collection Scheduling Parameters
  EnableDataCollectionScheduling:
    Type: String
    Description: Enable automatic scheduling of the AriaStateMachine for data collection
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

  DataCollectionScheduleExpression:
    Type: String
    Description: 'Schedule expression for automatic data collection (e.g., rate(6 hours), cron(0 */6 * * ? *))'
    Default: 'rate(6 hours)'

  DataCollectionScheduleDescription:
    Type: String
    Description: 'Description for the scheduled data collection execution'
    Default: 'Automated ARIA identity data collection every 6 hours'

  DataCollectionScheduleTimezone:
    Type: String
    Description: 'Timezone for cron-based schedules (e.g., America/New_York, UTC)'
    Default: 'UTC'

Conditions:
  ShouldDeployNeptune: !Equals [!Ref DeployNeptune, 'true']
  ShouldDeployNeptuneWithScheduling: !And
    - !Equals [!Ref DeployNeptune, 'true']
    - !Equals [!Ref EnableScheduling, 'true']

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "S3 Bucket SSM Parameters"
        Parameters:
          - S3SourceBucketName
          - S3ExportBucketName
          - TemplatesBucketName
      - 
        Label: 
          default: "Lambda Functions"
        Parameters: 
          - CreateTablesS3Key
          - ListUsersS3Key
          - ListGroupsS3Key
          - ListGroupMembershipS3Key
          - ListPermissionSetsS3Key
          - ListProvisionedPermissionSetsS3Key
          - ListAccountsS3Key
          - ListUserAccountAssignmentsS3Key
          - ListGroupAccountAssignmentsS3Key
          - GetIAMRolesS3Key
          - S3ExportS3Key
          - AccessAnalyzerFindingIngestionS3Key
          - UpdateFunctionCodeS3Key
      - 
        Label: 
          default: "Python Handler"
        Parameters:
          - PythonHandler
      - 
        Label: 
          default: "Neptune Analytics"
        Parameters:
          - DeployNeptune
          - GraphName
          - PublicIPAddress
      - 
        Label: 
          default: "Neptune Notebook"
        Parameters:
          - NotebookInstanceType
          - NotebookName
      - 
        Label: 
          default: "Graph Export Scheduling"
        Parameters:
          - EnableScheduling
          - ScheduleExpression
          - ScheduleDescription
          - ScheduleTimezone
      - 
        Label: 
          default: "Data Collection Scheduling"
        Parameters:
          - EnableDataCollectionScheduling
          - DataCollectionScheduleExpression
          - DataCollectionScheduleDescription
          - DataCollectionScheduleTimezone

Resources:
  # Lambda Functions Stack
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/lambda-functions.yaml'
      Parameters:
        S3SourceBucketName: !Ref S3SourceBucketName
        S3ExportBucketName: !Ref S3ExportBucketName
        CreateTablesS3Key: !Ref CreateTablesS3Key
        ListUsersS3Key: !Ref ListUsersS3Key
        ListGroupsS3Key: !Ref ListGroupsS3Key
        ListGroupMembershipS3Key: !Ref ListGroupMembershipS3Key
        ListPermissionSetsS3Key: !Ref ListPermissionSetsS3Key
        ListProvisionedPermissionSetsS3Key: !Ref ListProvisionedPermissionSetsS3Key
        ListAccountsS3Key: !Ref ListAccountsS3Key
        ListUserAccountAssignmentsS3Key: !Ref ListUserAccountAssignmentsS3Key
        ListGroupAccountAssignmentsS3Key: !Ref ListGroupAccountAssignmentsS3Key
        GetIAMRolesS3Key: !Ref GetIAMRolesS3Key
        S3ExportS3Key: !Ref S3ExportS3Key
        AccessAnalyzerFindingIngestionS3Key: !Ref AccessAnalyzerFindingIngestionS3Key
        UpdateFunctionCodeS3Key: !Ref UpdateFunctionCodeS3Key
        PythonHandler: !Ref PythonHandler
        StackName: !Ref AWS::StackName
      Tags:
        - Key: aria
          Value: nested-stack

  # SSM Parameters Stack
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/ssm-stack.yaml'
      Parameters:
        CreateTablesS3Key: !Ref CreateTablesS3Key
        ListUsersS3Key: !Ref ListUsersS3Key
        ListGroupsS3Key: !Ref ListGroupsS3Key
        ListGroupMembershipS3Key: !Ref ListGroupMembershipS3Key
        ListPermissionSetsS3Key: !Ref ListPermissionSetsS3Key
        ListProvisionedPermissionSetsS3Key: !Ref ListProvisionedPermissionSetsS3Key
        ListAccountsS3Key: !Ref ListAccountsS3Key
        ListUserAccountAssignmentsS3Key: !Ref ListUserAccountAssignmentsS3Key
        ListGroupAccountAssignmentsS3Key: !Ref ListGroupAccountAssignmentsS3Key
        GetIAMRolesS3Key: !Ref GetIAMRolesS3Key
        S3ExportS3Key: !Ref S3ExportS3Key
        AccessAnalyzerFindingIngestionS3Key: !Ref AccessAnalyzerFindingIngestionS3Key
        UpdateFunctionCodeS3Key: !Ref UpdateFunctionCodeS3Key
        CreateTablesLambdaArn: !GetAtt LambdaStack.Outputs.CreateTablesLambdaArn
        ListUsersLambdaArn: !GetAtt LambdaStack.Outputs.ListUsersLambdaArn
        ListGroupsLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupsLambdaArn
        ListGroupMembershipLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupMembershipLambdaArn
        ListPermissionSetsLambdaArn: !GetAtt LambdaStack.Outputs.ListPermissionSetsLambdaArn
        ListProvisionedPermissionSetsLambdaArn: !GetAtt LambdaStack.Outputs.ListProvisionedPermissionSetsLambdaArn
        ListAccountsLambdaArn: !GetAtt LambdaStack.Outputs.ListAccountsLambdaArn
        ListUserAccountAssignmentsLambdaArn: !GetAtt LambdaStack.Outputs.ListUserAccountAssignmentsLambdaArn
        ListGroupAccountAssignmentsLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupAccountAssignmentsLambdaArn
        GetIAMRolesLambdaArn: !GetAtt LambdaStack.Outputs.GetIAMRolesLambdaArn
        S3ExportLambdaArn: !GetAtt LambdaStack.Outputs.S3ExportLambdaArn
        AccessAnalyzerFindingIngestionLambdaArn: !GetAtt LambdaStack.Outputs.AccessAnalyzerFindingIngestionLambdaArn
        UpdateFunctionCodeLambdaArn: !GetAtt LambdaStack.Outputs.UpdateFunctionCodeLambdaArn
      Tags:
        - Key: aria
          Value: nested-stack

  # EventBridge Stack
  EventBridgeStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/eventbridge-stack.yaml'
      Parameters:
        S3SourceBucketName: !Ref S3SourceBucketName
        UpdateFunctionCodeLambdaArn: !GetAtt LambdaStack.Outputs.UpdateFunctionCodeLambdaArn
        AccessAnalyzerFindingIngestionLambdaArn: !GetAtt LambdaStack.Outputs.AccessAnalyzerFindingIngestionLambdaArn
        StackName: !Ref AWS::StackName
      Tags:
        - Key: aria
          Value: nested-stack

  # Step Functions Stack
  StepFunctionsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/step-functions.yaml'
      Parameters:
        CreateTablesLambdaArn: !GetAtt LambdaStack.Outputs.CreateTablesLambdaArn
        ListUsersLambdaArn: !GetAtt LambdaStack.Outputs.ListUsersLambdaArn
        ListGroupsLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupsLambdaArn
        ListGroupMembershipLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupMembershipLambdaArn
        ListAccountsLambdaArn: !GetAtt LambdaStack.Outputs.ListAccountsLambdaArn
        ListPermissionSetsLambdaArn: !GetAtt LambdaStack.Outputs.ListPermissionSetsLambdaArn
        ListProvisionedPermissionSetsLambdaArn: !GetAtt LambdaStack.Outputs.ListProvisionedPermissionSetsLambdaArn
        ListUserAccountAssignmentsLambdaArn: !GetAtt LambdaStack.Outputs.ListUserAccountAssignmentsLambdaArn
        ListGroupAccountAssignmentsLambdaArn: !GetAtt LambdaStack.Outputs.ListGroupAccountAssignmentsLambdaArn
        GetIAMRolesLambdaArn: !GetAtt LambdaStack.Outputs.GetIAMRolesLambdaArn
        EnableDataCollectionScheduling: !Ref EnableDataCollectionScheduling
        DataCollectionScheduleExpression: !Ref DataCollectionScheduleExpression
        DataCollectionScheduleDescription: !Ref DataCollectionScheduleDescription
        DataCollectionScheduleTimezone: !Ref DataCollectionScheduleTimezone
      Tags:
        - Key: aria
          Value: nested-stack

  # Neptune Analytics Stack
  NeptuneAnalyticsStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldDeployNeptune
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/neptune-analytics.yaml'
      Parameters:
        AriaSetupStackName: !Ref AWS::StackName
        S3ExportBucketName: !Ref S3ExportBucketName
        AriaStateMachineArn: !GetAtt StepFunctionsStack.Outputs.StateMachineArn
        GraphName: !Ref GraphName
        PublicIPAddress: !Ref PublicIPAddress
        EnableGraphExportScheduling: !Ref EnableScheduling
        GraphExportScheduleExpression: !Ref ScheduleExpression
        GraphExportScheduleDescription: !Ref ScheduleDescription
        GraphExportScheduleTimezone: !Ref ScheduleTimezone
      Tags:
        - Key: aria
          Value: nested-stack

  # Neptune Notebook Stack
  NeptuneNotebookStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldDeployNeptune
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.${AWS::Region}.amazonaws.com/neptune-notebook.yaml'
      Parameters:
        NotebookInstanceType: !Ref NotebookInstanceType
        NotebookName: !Ref NotebookName
        GraphPort: '8182'
        GraphVPC: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneVPC
        GraphSubnet: !GetAtt NeptuneAnalyticsStack.Outputs.NeptunePrivateSubnet1
        GraphSecurityGroup: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneAnalyticsSecurityGroup
        NeptuneGraphEndpoint: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneGraphEndpoint
        NeptuneGraphId: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneGraphId
        NeptuneGraphName: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneGraphName
      Tags:
        - Key: aria
          Value: nested-stack

Outputs:
  GetIAMRolesLambdaFunctionArn:
    Description: 'ARN of the GetIAMRoles Lambda function'
    Value: !GetAtt LambdaStack.Outputs.GetIAMRolesLambdaArn
  GetIAMRolesLambdaFunctionName:
    Description: 'Name of the GetIAMRoles Lambda function'
    Value: !GetAtt LambdaStack.Outputs.GetIAMRolesLambdaName
  GetIAMRolesLambdaFunctionExecutionRoleArn:
    Description: ARN of IAM role created for GetIAMRoles Lambda function
    Value: !GetAtt LambdaStack.Outputs.GetIAMRolesLambdaExecutionRoleArn
  S3ExportLambdaFunctionArn:
    Description: 'ARN of the S3Export Lambda function'
    Value: !GetAtt LambdaStack.Outputs.S3ExportLambdaArn
    Export:
      Name: 
        Fn::Sub: ${AWS::StackName}-S3ExportLambdaFunctionArn
  S3ExportBucketName:
    Description: 'Name of the S3 Export Bucket'
    Value: !Ref S3ExportBucketName
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-S3ExportBucketName
  StackName:
    Description: 'The stack name'
    Value: !Sub '${AWS::StackName}'
    Export:
      Name: 'Aria-setup-stackname'
  NeptuneGraphEndpoint:
    Condition: ShouldDeployNeptune
    Description: 'Neptune Analytics Graph Endpoint'
    Value: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneGraphEndpoint
  NeptuneGraphId:
    Condition: ShouldDeployNeptune
    Description: 'Neptune Analytics Graph ID'
    Value: !GetAtt NeptuneAnalyticsStack.Outputs.NeptuneGraphId
  NeptuneNotebookURL:
    Condition: ShouldDeployNeptune
    Description: 'Neptune Analytics Notebook URL'
    Value: !GetAtt NeptuneNotebookStack.Outputs.NeptuneAnalyticsSagemakerNotebook
  
  # Graph Export Scheduling Outputs (only available when Neptune is deployed and scheduling is enabled)
  AriaExportGraphStateMachineArn:
    Condition: ShouldDeployNeptune
    Description: 'ARN of the AriaExportGraphStateMachine'
    Value: !GetAtt NeptuneAnalyticsStack.Outputs.AriaExportGraphStateMachineArn
  GraphExportSchedulingEnabled:
    Condition: ShouldDeployNeptune
    Description: 'Whether scheduling is enabled for the AriaExportGraphStateMachine'
    Value: !GetAtt NeptuneAnalyticsStack.Outputs.GraphExportSchedulingEnabled
  GraphExportScheduleExpression:
    Condition: ShouldDeployNeptuneWithScheduling
    Description: 'Schedule expression for the AriaExportGraphStateMachine (if enabled)'
    Value: !Ref ScheduleExpression
  
  GraphExportTriggerRule:
    Condition: ShouldDeployNeptuneWithScheduling
    Description: 'EventBridge Rule that triggers graph export after data collection completes'
    Value: !GetAtt NeptuneAnalyticsStack.Outputs.GraphExportTriggerRuleName
  
  # Data Collection Scheduling Outputs
  AriaStateMachineArn:
    Description: 'ARN of the AriaStateMachine for data collection'
    Value: !GetAtt StepFunctionsStack.Outputs.StateMachineArn
  DataCollectionSchedulingEnabled:
    Description: 'Whether scheduling is enabled for the AriaStateMachine data collection'
    Value: !GetAtt StepFunctionsStack.Outputs.DataCollectionSchedulingEnabled
  DataCollectionScheduleExpression:
    Description: 'Schedule expression for the AriaStateMachine data collection (if enabled)'
    Value: !Ref DataCollectionScheduleExpression