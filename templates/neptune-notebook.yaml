---
Description: A template to deploy Neptune Notebooks using CloudFormation resources
Parameters:
  NotebookInstanceType:
    Type: String
  NotebookName:
    Type: String
  GraphPort:
    Description: Port to access your Analytics Graph.
    Type: String
  GraphVPC:
    Type: AWS::EC2::VPC::Id
  GraphSubnet:
    Type: AWS::EC2::Subnet::Id
  GraphSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NeptuneGraphEndpoint:
    Type: String
    Description: Neptune Graph Endpoint from Neptune Analytics stack
  NeptuneGraphId:
    Type: String
    Description: Neptune Graph ID from Neptune Analytics stack
  NeptuneGraphName:
    Type: String
    Description: Neptune Graph Name from Neptune Analytics stack

Conditions:
  AddAnalyticsGraphVpc: !Not 
    - !Equals 
      - !Ref GraphVPC
      - ''
  AddAnalyticsGraphSubnet: !Not 
    - !Equals 
      - !Ref GraphSubnet
      - ''
  AddAnalyticsGraphSecurityGroup: !Not 
    - !Equals 
      - !Ref GraphSecurityGroup
      - ''
  AddNetworkOptions: !And 
    - !Condition AddAnalyticsGraphVpc
    - !Condition AddAnalyticsGraphSubnet
  CreateSagemakerSecurityGroup: !And 
    - !Condition AddNetworkOptions
    - !Not 
      - !Condition AddAnalyticsGraphSecurityGroup
  IsIadRegion: !Equals 
    - !Ref AWS::Region
    - us-east-1

Resources:
  SageMakerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: Required for Neptune to function
    Condition: CreateSagemakerSecurityGroup
    Properties:
      GroupDescription: Allow Access
      VpcId: !Ref GraphVPC
      SecurityGroupEgress:
      - Description: Allow HTTPS traffic outbound
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub Neptune-Analytics
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: Stack
          Value: !Sub ${AWS::Region}-${AWS::StackName}
        - Key: Application
          Value: NeptuneCloudformation
        - Key: aria
          Value: securitygroup
          
  NeptuneAnalyticsNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    #checkov:skip=CKV_AWS_187:This is an example notebook instance kmskeyid and associated KMS key would be created to run in production
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W1201
            reason: This is an example notebook instance kmskeyid and associated KMS key would be created to run in production
    Properties:
      InstanceType: !Ref NotebookInstanceType
      PlatformIdentifier: notebook-al2-v3
      NotebookInstanceName: !Join 
        - ''
        - - aws-neptune-analytics-
          - !Ref NotebookName
      SubnetId: !If 
        - AddNetworkOptions
        - !Ref GraphSubnet
        - !Ref AWS::NoValue
      SecurityGroupIds: !If 
        - AddNetworkOptions
        - !If 
          - AddAnalyticsGraphSecurityGroup
          - - !Ref GraphSecurityGroup
          - - !GetAtt SageMakerSecurityGroup.GroupId
        - !Ref AWS::NoValue
      RoleArn: !GetAtt ExecutionRole.Arn
      LifecycleConfigName: !GetAtt NeptuneAnalyticsNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
      Tags:
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: Stack
          Value: !Sub ${AWS::Region}-${AWS::StackName}
        - Key: Application
          Value: NeptuneCloudformation
        - Key: aws-neptune-analytics-graph-endpoint
          Value: !Ref NeptuneGraphEndpoint
        - Key: aws-neptune-graph-name
          Value: !Ref NeptuneGraphName
        - Key: aws-neptune-graph-id
          Value: !Ref NeptuneGraphId
        - Key: aria
          Value: notebookinstance
          
  NeptuneAnalyticsNotebookInstanceLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      OnStart:
        - Content:
            Fn::Base64: !Sub
              - |
                #!/bin/bash
                
                sudo -u ec2-user -i <<'EOF'
                
                echo "export GRAPH_NOTEBOOK_AUTH_MODE=IAM" >> ~/.bashrc
                echo "export GRAPH_NOTEBOOK_SSL=True" >> ~/.bashrc
                echo "export GRAPH_NOTEBOOK_SERVICE=neptune-graph" >> ~/.bashrc
                echo "export GRAPH_NOTEBOOK_HOST=${NeptuneGraphEndpoint}" >> ~/.bashrc
                echo "export GRAPH_NOTEBOOK_PORT=${GraphPort}" >> ~/.bashrc
                echo "export NEPTUNE_LOAD_FROM_S3_ROLE_ARN=" >> ~/.bashrc
                echo "export AWS_REGION=${AWS::Region}" >> ~/.bashrc
                
                aws s3 cp s3://aws-neptune-notebook-${AWS::Region}/graph_notebook.tar.gz /tmp/graph_notebook.tar.gz
                
                rm -rf /tmp/graph_notebook
                tar -zxvf /tmp/graph_notebook.tar.gz -C /tmp
                chmod +x /tmp/graph_notebook/install.sh
                /tmp/graph_notebook/install.sh

                EOF

              - NeptuneGraphEndpoint: !Ref NeptuneGraphEndpoint
                GraphPort: !Ref GraphPort
                NeptuneNoteBookCopy: !If [
                  "IsIadRegion",
                  "aws-neptune-notebook",
                  !Sub "aws-neptune-notebook-${AWS::Region}"
                ]

  ExecutionRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
          rules_to_suppress:
            - id: F3
              reason: This is a role assumed by SageMaker and is not used by an end user
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SagemakerNotebookNeptuneAnalyticsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: !Sub arn:${AWS::Partition}:s3:::*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*
              - Effect: Allow
                Action: neptune-graph:*
                Resource: !Sub arn:aws:neptune-graph:${AWS::Region}:${AWS::AccountId}:*/*
              - Effect: Allow
                Action: sagemaker:DescribeNotebookInstance
                Resource: !Sub arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:notebook-instance/*
      Tags: 
        - Key: aria
          Value: role

Outputs:
  NeptuneAnalyticsNotebookInstanceId:
    Value: !Ref NeptuneAnalyticsNotebookInstance
  NeptuneAnalyticsSagemakerNotebook:
    Value: !Join
      - ''
      - - https://
        - !Select
          - 1
          - !Split
            - /
            - !Ref NeptuneAnalyticsNotebookInstance
        - .notebook.
        - !Ref AWS::Region
        - .sagemaker.aws/
  NeptuneAnalyticsNotebookInstanceLifecycleConfigId:
    Value: !Ref NeptuneAnalyticsNotebookInstanceLifecycleConfig